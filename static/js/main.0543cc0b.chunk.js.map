{"version":3,"sources":["library/components/Frame/Frame.js","library/components/Gallery/Gallery.js","conf/conf.js","library/utils/Footer/Footer.js","library/components/Title/Title.js","library/utils/Header/Header.js","screens/MainScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Frame","props","className","src","alt","shrinkHeight","caption","copyright","Gallery","isRandom","useState","artLibrary","setArtLibrary","nextPage","setNextPage","isNearFinalScroll","setIsNearFinalScroll","useEffect","url","process","fetch","then","response","json","data","info","next","concat","records","catch","error","console","log","onScroll","e","target","scrollWidth","scrollLeft","frames","length","forEach","image","renditionnumber","height","width","push","baseimageurl","imageid","renderArtLibrary","Footer","href","Title","title","Header","MainScreen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA2BeA,MAjBf,SAAeC,GACX,OACI,yBAAQC,UAAYD,EAAMC,UAA1B,UACI,qBAAKC,IAAMF,EAAME,IAAMC,IAAQH,EAAMG,IAAMF,UAAYD,EAAMI,aAAc,gBAAiB,KAC5F,uCAAcJ,EAAMK,QAAWL,EAAMM,UAAW,iBAAkBN,EAAMM,UAAY,U,MCAjF,SAASC,EAAQP,GAC5B,IACMQ,IAAWR,EAAMQ,UAAUR,EAAMQ,SACvC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkDJ,oBAAS,GAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,WACN,IAAIC,EAAML,EACO,KAAbA,IACAK,EAAG,4CATU,QASV,mBCxBOC,wCDwBP,OAAwEV,EAAS,eAAe,KAEvGW,MAAMF,GACDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFV,EAAYU,EAAKC,KAAKC,MACtBV,GAAqB,GACrBJ,EAAcD,EAAWgB,OAAOH,EAAKI,aAExCC,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAI,qCAGhC,CAACjB,IAuBJ,OACI,yBAASb,UAAU,UAAU+B,SANZ,SAACC,GACdA,EAAEC,OAAOC,YAAc,IAAOF,EAAEC,OAAOE,YACvCrB,GAAqB,IAIzB,SAtBqB,WACrB,IAAIsB,EAAS,GAYb,OAXI3B,EAAW4B,OAAS,GACpB5B,EAAW6B,SAAQ,SAAAC,GACf,IAAInC,EAAU,GACVD,GAAe,EACE,MAAjBoC,EAAMnC,SAA+B,KAAZA,IAAgBA,EAAUmC,EAAMnC,SAChC,MAAzBmC,EAAMC,iBAAuC,KAAZpC,IAAgBA,EAAUmC,EAAMC,iBACjED,EAAME,OAASF,EAAMG,QAAOvC,GAAe,GAC/CiC,EAAOO,KAAK,qBAAK3C,UAAU,kBAAf,SAAqD,cAAC,EAAD,CAAOA,UAAU,QAAQC,IAAMsC,EAAMK,aAAc1C,IAAI,MAAME,QAAUA,EAASC,UAAWkC,EAAMlC,UAAWF,aAAcA,KAAzIoC,EAAMM,aAIzDT,EAUDU,K,MErDC,SAASC,IACpB,OACI,iCACI,iDAAmB,mBAAGC,KAAK,gCAAR,6BCUhBC,MAZf,SAAelD,GACX,OACI,oBAAIC,UAAYD,EAAMC,UAAtB,SACMD,EAAMmD,S,MCFL,SAASC,EAAOpD,GAC3B,OACI,iCACI,cAAC,EAAD,CAAOmD,MAAQnD,EAAMmD,MAAQlD,UAAU,mB,MCDpC,SAASoD,IACpB,OACI,sBAAKpD,UAAU,iBAAf,UACI,cAAC,EAAD,CAAQkD,MAAM,mBAEd,cAAC,EAAD,IAEA,cAAC,EAAD,OCTGG,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0543cc0b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\n/**\n * Frame Component\n * \n * @param   {*} props 'className' Class,'src' Source, 'alt' Alternative Text, 'shrinkHeight' Should Shrink height, 'caption' Caption for image, 'copyright' Image Copyright\n * @returns JSX Component\n */\nfunction Frame(props) {\n    return (\n        <figure className={ props.className }>\n            <img src={ props.src } alt = { props.alt } className={ props.shrinkHeight? \"shrink-height\": \"\"}/>\n            <figcaption>{ props.caption }{ props.copyright? ' - Copyright: '+ props.copyright : '' }</figcaption>\n        </figure>\n    )\n}\n\nFrame.propTypes = {\n    className : PropTypes.string,\n    src : PropTypes.string,\n    alt : PropTypes.string, \n    shrinkHeight : PropTypes.bool, \n    copyright : PropTypes.string \n}\n\nexport default Frame\n\n\n","import React from 'react'\nimport { useState ,useEffect } from 'react'\nimport Frame from '../Frame/Frame'\nimport './Gallery.css'\nimport { apiKey } from '../../../conf/conf'\n/**\n * Gallery Component\n * @const resourceType Should Stay as image to manage the request\n * @const isRandom If the images should be load Random\n * @const artLibrary (State) contain all the resouces loaded\n * @const nextPage (State) Contain the next page to be loaded from api\n * @const isNearFinalScroll (State) It Manage if the scroll is ending to make a new request for Api\n * @returns JSX Component\n */\nexport default function Gallery(props) {\n    const resourceType = \"image\";\n    const isRandom = props.isRandom? props.isRandom : false;\n    const [artLibrary, setArtLibrary] = useState([])\n    const [nextPage, setNextPage] = useState(\"\")\n    const [isNearFinalScroll, setIsNearFinalScroll] = useState(false)\n    \n    useEffect(() => {\n        let url = nextPage\n        if (nextPage === \"\")\n            url = `https://api.harvardartmuseums.org/${resourceType}?apikey=${apiKey}${isRandom?'&sort=random':''}`\n        \n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setNextPage(data.info.next)\n                setIsNearFinalScroll(false)\n                setArtLibrary(artLibrary.concat(data.records))\n            })\n            .catch(error=> console.log('Error whiling consulting Api'));\n            // La siguiente linea es para evadir un warning que evita el build en prod\n            // eslint-disable-next-line\n    }, [isNearFinalScroll])\n\n    const renderArtLibrary = ()=>{\n        let frames = []\n        if (artLibrary.length > 0){\n            artLibrary.forEach(image => {\n                let caption = \"\";\n                let shrinkHeight = false;\n                if (image.caption != null && caption === \"\") caption = image.caption; \n                if (image.renditionnumber != null && caption === \"\") caption = image.renditionnumber; \n                if (image.height > image.width) shrinkHeight = true\n                frames.push(<div className=\"frame-container\" key={image.imageid}><Frame className=\"frame\" src= {image.baseimageurl} alt=\"Alt\" caption= {caption} copyright={image.copyright} shrinkHeight={shrinkHeight}/></div>);\n            });\n        }\n        \n        return frames;\n    }\n\n    const handleScroll = (e)=>{\n        if (e.target.scrollWidth - 5000 < e.target.scrollLeft)\n            setIsNearFinalScroll(true)\n    }\n\n    return (\n        <section className=\"gallery\" onScroll={ handleScroll }>\n            { renderArtLibrary() } \n        </section>\n    )\n}\n","export const apiKey = process.env.REACT_APP_HARDVARD_MUSEUM_APIKEY\n","import React from 'react'\nimport './Footer.css'\n\n/**\n * Footer Component\n * \n * @returns JSX Component \n */\nexport default function Footer() {\n    return (\n        <footer>\n            <span>Developed by <a href=\"https://github.com/feliamunda\">Feliamunda</a></span>\n        </footer>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Title Component\n * \n * @param {*} props 'title' Title \n * @returns JSX Component\n */\nfunction Title(props) {\n    return (\n        <h1 className={ props.className }>\n            { props.title }\n        </h1> \n    )\n}\n\nTitle.propTypes = {\n    title : PropTypes.string\n}\n\nexport default Title\n\n","import React from 'react'\nimport Title from '../../components/Title/Title'\nimport './Header.css'\n\n/**\n * Header Component\n * \n * @param {*} props 'title' Title \n * @returns JSX Component\n */\nexport default function Header(props) {\n    return (\n        <header>\n            <Title title={ props.title } className=\"header-title\"/>\n        </header>\n    )\n}\n","import React from 'react'\nimport Gallery from '../library/components/Gallery/Gallery'\nimport Footer from '../library/utils/Footer/Footer'\nimport Header from '../library/utils/Header/Header'\nimport './MainScreen.css'\n\n/**\n * MainScreen Component\n * \n * @returns JSX Component \n */\n\nexport default function MainScreen() {\n    return (\n        <div className=\"main-container\">\n            <Header title=\"Museum Gallery\"/> \n                \n            <Gallery/>\n\n            <Footer/>\n        </div>\n    )\n}\n","import MainScreen from './screens/MainScreen';\n\nfunction App() {\n  return (\n    <>\n      <MainScreen/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}